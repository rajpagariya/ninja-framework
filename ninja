#!/bin/bash
echo "|-----------------------------------------------------|"
echo "| NNNN	     NN  II  NNNN       NN       JJ  AAAAAAAA |"
echo "| NN  NN     NN  II  NN  NN     NN       JJ  AA    AA |"
echo "| NN   NN    NN  II  NN   NN    NN       JJ  AA    AA |"
echo "| NN    NN   NN  II  NN    NN   NN   JJ  JJ  AAAAAAAA |"
echo "| NN     NN  NN  II  NN      NN NN   JJ  JJ  AA    AA |"
echo "| NN       NNNN  II  NN       NNNN   JJJJJJ  AA    AA |"
echo "|-----------------------------------------------------------------------------------------------"                                                      
echo "| FFFFFFFF  RRRRRRRR   AAAAAAAA  MMMMMMMMMM  EEEEEEEE  WW  WW  WW  OOOOOOOO  RRRRRRRR  KK   KK |"  
echo "| FF	    RR     R   AA    AA  MM  MM  MM  EE	       WW  WW  WW  OO    OO  RR     R  KK  KK  |"
echo "| FF        RRRRRRRR   AA    AA  MM  MM  MM  EEEEEEEE  WW  WW  WW  OO    OO  RRRRRRRR  KKKKK   |"
echo "| FFFFFFF   RR RR      AAAAAAAA  MM  MM  MM  EEEEEEEE  WW  WW  WW  OO    OO  RR RR     KKKKK   |"
echo "| FF	    RR  RR     AA    AA  MM  MM  MM  EE	       WW  WW  WW  OO    OO  RR  RR    KK  KK  |"
echo "| FF        RR    RR   AA    AA  MM  MM  MM  EEEEEEEE  WWWWWWWWWW  OOOOOOOO  RR   RR   KK   KK |"
echo "|----------------------------------------------------------------------------------------------|"
echo "Author: Raj Pagariya"

#!/bin/bash
echo "This is a framework for scanning network ports, their services and saves the results as screenshots to make your job easier."
echo "It uses nmap and scrot. If you OS does not have scrot, you can install it by executing the following command in Terminal: sudo apt-get install scrot."
echo "You can use this framework in either network mode or single-host mode.
In network mode: 1. It scans the given range of IP addresses one-by-one using default group of scrips.
		 2. It uses default group of scripts to reduce the time complexity.
		 3. It generates the report by saving the screenshot of the output by creating a folder for each IP Address. For example, if the IP Address of the network device is 192.168.0.2, then it will save the screenshot in a folder named 192.168.0.2. This folder will be created inside the Ninja folder on the desktop."
echo "Enter n for network mode or s for single device mode"
read md
if [ $md = n ]
	then echo "Enter the fixed part of IP Addresses:
For example, if you want to scan the network devices having IP Address from 192.168.0.1 to 192.168.0.20, give 192.168.0. as input"
	read targ
	echo "Enter the lowest value of the unfixed part of IP Address.  
For example, if you want to scan the network devices having IP Address from 192.168.0.1 to 192.168.0.20, give 1 as input"
	read e
	echo "Enter the highest value of the unfixed part of IP Address.
For example, if you want to scan the network devices having IP Address from 192.168.0.1 to 192.168.0.20, give 20 as input"
	read t
	for (( i=e; i<=t; i++))
		
		do mkdir -p /root/Desktop/Ninja/$targ$i
		mkdir -p /root/Desktop/Ninja/$targ$i
		nmap -v -A $targ$i
		scrot /root/Desktop/Ninja/$targ$i/result.png
		sleep 5s
		clear
		done	
fi
if [ $md = s ]
	then echo "Enter wesbite/IP Address of the target"
	read target
	mkdir /root/Desktop/Ninja
	echo "Do you want to scan target with default scripts or specific scrips? Enter a for default scripts and b for specific script groups and c for the best of all scripts."
	read decision
	if [ $decision = a ]
		then nmap -v -PO -sV $target
		sleep 5s
		scrot /root/Desktop/Ninja/$target-defaultscan.png
		clear
	fi
	if [ $decision = b ]
		then echo "Do you want to scan your target using authentication group of scripts? Enter a for yes, x for no."
		read subdecision
		if [ $subdecision = a ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script auth -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-auth.png
			clear
		fi
		echo "Do you want to scan your target using exploit group of scripts? Enter e for yes, x for no."
		read subdecision
		if [ $subdecision = e ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script exploit -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-exploit.png
			clear		
		fi
		echo "Do you want to scan your target using malware group of scripts? Enter m for yes, x for no."
		read subdecision
		if [ $subdecision = m ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script malware -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-malware.png
			clear		
		fi
		echo "Do you want to scan your target using safe group of scripts? Enter s for yes, x for no."
		read subdecision
		if [ $subdecision = s ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."		
			nmap -v --script safe -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-safe.png
			clear		
		fi
		echo "Do you want to scan your target using vulerability group of scripts? Enter v for yes, x for no."
		read subdecision
		if [ $subdecision = v ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."		
			nmap -v --script vuln -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-vuln.png
			clear	
		fi
		echo "Do you want to scan your target using broadcast group of scripts? Enter b for yes, x for no."
		read subdecision
		if [ $subdecision = b ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script broadcast -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-broadcast.png
			clear
		fi
		echo "Do you want to scan your target using brute group of scripts? Enter br for yes, x for no."
		read subdecision
		if [ $subdecision = br ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script brute -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-brute.png
			clear		
		fi
		echo "Do you want to scan your target using discovery group of scripts? Enter d for yes, x for no."
		read subdecision
		if [ $subdecision = d ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script discovery -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-discovery.png
			clear		
		fi
		echo "Do you want to scan your target using dos group of scripts? Enter dos for yes, x for no."
		read subdecision
		if [ $subdecision = dos ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script dos -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-dos.png
			clear		
		fi
		echo "Do you want to scan your target using external group of scripts? Enter ex for yes, x for no."
		read subdecision
		if [ $subdecision = ex ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script external -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-external.png
			clear
		fi
		echo "Do you want to scan your target using fuzzer group of scripts? Enter f for yes, x for no."
		read subdecision
		if [ $subdecision = f ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script fuzzer -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-fuzzer.png
			clear		
		fi
		echo "Do you want to scan your target using intrusive group of scripts? Enter in for yes, x for no."
		read subdecision
		if [ $subdecision = in ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script intrusive -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-intrusive.png
			clear		
		fi
		echo "Do you want to scan your target using version group of scripts? Enter ver for yes, x for no."
		read subdecision
		if [ $subdecision = ver ]
			then echo "Sit back and Relax. Have a cup of coffee. This will take time."
			nmap -v --script version -sV $target
			sleep 5s
			scrot /root/Desktop/Ninja/$target-version.png
		clear		
		fi	
	fi
	if [ $decision = c ]
		then nmap -sV -T4 -O -A -v -Pn --script dns-check-zone,dns-zone-transfer,firewalk,ftp-anon,http-apache-negotiation,http-headers,http-iis-short-name-brute,http-iis-webdav-vuln,http-ls,http-methods,http-php-version,http-phpmyadmin-dir-traversal,http-phpself-xss,http-rfi-spider,http-shellshock,http-slowloris,http-stored-xss,http-trace,http-traceroute,http-userdir-enum,ms-sql-dump-hashes,ms-sql-empty-password,ms-sql-info,ms-sql-ntlm-info,mysql-brute,mysql-databases,mysql-dump-hashes,mysql-empty-password,mysql-enum,mysql-info,mysql-query,mysql-users,mysql-vuln-cve2012-2122,nbstat,samba-vuln-cve-2012-1182,smb-enum-domains,smb-enum-groups,smb-enum-processes,smb-enum-sessions,smb-enum-shares,smb-enum-users,smb-psexec,smb-security-mode,smbv2-enabled,snmp-hh3c-logins,snmp-info,ssh-hostkey,ssh2-enum-algos,sshv1,ssl-ccs-injection,ssl-cert-intaddr,ssl-cert,ssl-date,ssl-dh-params,ssl-enum-ciphers,ssl-heartbleed,sslv2-drown,sslv2 $target
		sleep 5s
		scrot /root/Desktop/Ninja/$target-bestofall.png
		clear
	fi
fi
echo "Screenshots of the scan have been generated in the Ninja folder on your desktop. In case you opted for specific scripts, the filename of each file contains the name of the script it belongs to."
echo "Thank you for using this script. You can mail your suggestions and improvements at rajpagariya@hotmail.com."

